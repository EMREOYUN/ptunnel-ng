image: debian:stable-slim

stages:
  - build

before_script:
  - test ! -r /etc/debian_version || apt-get -qq update
  - test ! -r /etc/debian_version || apt-get install -y git debhelper dpkg-dev build-essential fakeroot flawfinder wget unzip
  - test ! -r /etc/debian_version || apt-get install -y libpcap-dev libselinux1-dev
  - test ! -r /etc/debian_version || apt-get install -y binutils-mingw-w64-i686 gcc-mingw-w64 mingw-w64-i686-dev mingw-w64-common clang
  - test ! -r /etc/debian_version || apt-get install -y autoconf automake dh-autoreconf
  - test ! -r /etc/arch-release || pacman -Sy archlinux-keyring --noconfirm
  - test ! -r /etc/arch-release || pacman -Syu --noconfirm
  - test ! -r /etc/arch-release || pacman -S --noconfirm binutils gcc base-devel git
  - mkdir -p ./deploy/gcc ./deploy/i686-w64-mingw32-winpcap ./deploy/i686-w64-mingw32-npcap ./deploy/clang ./deploy/android28-clang

build:
  script:
    - autoreconf -fi
    - ./configure --enable-option-checking=fatal --prefix=/
    - make install CFLAGS='-Werror' DESTDIR="$(realpath ./deploy/gcc)" V=s
    - make dist
    - cp ptunnel-ng-*.tar.gz ./deploy/
  stage: build
  artifacts:
    paths:
      - deploy/
      - config.log
    when: always

build-debian:
  script:
    - dpkg-buildpackage -b -us -uc
  stage: build
  artifacts:
    paths:
      - config.log
    when: always

build-archlinux:
  image: finalduty/archlinux:daily
  script:
    - useradd builduser -m
    - passwd -d builduser
    - chown -R builduser .
    - su -m builduser bash -c 'makepkg'
    - su -m builduser bash -c 'makepkg -p PKGBUILD.dev --skipchecksums'
  stage: build

build-mingw:
  script:
    - autoreconf -fi
    - ./configure --enable-option-checking=fatal --prefix=/ --host=i686-w64-mingw32
    - make install CFLAGS='-Werror' DESTDIR="$(realpath ./deploy/i686-w64-mingw32-winpcap)" V=s
    - ./configure --enable-option-checking=fatal --prefix=/ --host=i686-w64-mingw32 --enable-npcap
    - make install CFLAGS='-Werror' DESTDIR="$(realpath ./deploy/i686-w64-mingw32-npcap)" V=s
  stage: build
  artifacts:
    paths:
     - deploy/
     - config.log
    when: always

build-clang:
  script:
    - autoreconf -fi
    - CC=clang ./configure --enable-option-checking=fatal --prefix=/
    - make install CFLAGS='-Werror' DESTDIR="$(realpath ./deploy/clang)" V=s
  stage: build
  artifacts:
    paths:
      - deploy/
      - config.log
    when: always

build-android:
  cache:
    key: toolchain-cache
    paths:
      - vendor/
  script:
    - mkdir -p vendor && cd vendor
    - test -r 'android-ndk-r19-linux-x86_64.zip' || wget --progress=dot:mega 'https://dl.google.com/android/repository/android-ndk-r19-linux-x86_64.zip'
    - test -d 'android-ndk-r19' || unzip -q 'android-ndk-r19-linux-x86_64.zip'
    - cd ..
    - autoreconf -fi
    - CC=aarch64-linux-android28-clang PATH="${PATH}:$(realpath ./vendor/android-ndk-r19/toolchains/llvm/prebuilt/linux-x86_64/bin)" ./configure --enable-option-checking=fatal --host=aarch64-linux-android
    - PATH="${PATH}:$(realpath ./vendor/android-ndk-r19/toolchains/llvm/prebuilt/linux-x86_64/bin)" make install CFLAGS='-Werror' DESTDIR="$(realpath ./deploy/android28-clang)" V=s
  stage: build
  artifacts:
    paths:
      - deploy/
      - config.log
    when: always
